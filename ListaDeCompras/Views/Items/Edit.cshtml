@model ListaDeCompras.Models.Item

@{
    ViewBag.Title = "Edit";
}


<div class="container-section">

    <h2>Editar Item</h2>

    @using (Html.BeginForm("Edit", "Items", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Preco, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Preco, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Preco, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Categoria, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Categoria, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataDeCompra, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataDeCompra, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataDeCompra, "", new { @class = "text-danger" })
        </div>
    </div>


    @{
        if (Model.ImagemDB != null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Imagem, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        var base64 = Convert.ToBase64String(Model.ImagemDB);
                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);

                        <img src="@imgSrc" class="imgList" />

                        <input type="file" multiple="multiple" class="btn multi"/>
                    }
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Salvar" class="btn-lg btn-dark" />
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <b class="control-label col-md-2">Editar Foto:</b>
                <div class="col-md-10">
                    <input type="file" multiple="multiple" class="btn multi" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Salvar" class="btn-lg btn-dark" />
                </div>
            </div>
        }
    }





</div>
    }

    <div>
        @Html.ActionLink("Voltar", "Index")
    </div>
</div>
@section Scripts {
     @Scripts.Render("~/bundles/jqueryval")
}
